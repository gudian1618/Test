package com.github.gudian1618.Java_1;

/**
 * @param
 * @author gudian1618
 * @version 1.0
 * @create 2019-04-14 15:30
 * @description
 *
 * 基本数据类型包装类
 *
 * 包与访问修饰符：
 * 包用于多个java源文件的管理，就像我们的目录一样
 *
 * oo原则：
 * （1）开闭原则：
 *      类、模块、函数应该对扩展开放、对修改关闭。完成后尽量不要修改，
 *      因为会对其他调用产生影响（设计好），如有需求，扩展修改。
 * （2）合成|聚合复用原则
 *      新对象的某些功能在已创建好的对象里已实现，尽量用对象提供的功能，
 *      使之成为新对象的一部分，而不必再重新创建。
 * （3）依赖倒置原则
 *      高层模块不应该依赖底层模块，二者都应该依赖其它抽象；
 *      抽象不应该依赖细节；
 *      细节应该依赖抽象
 * （4）接口隔离原则
 *      客户端不应该依赖他不需要的接口；
 *      一个类对另一个类的依赖应该建立在最小的接口上
 * （5）迪米特法则
 *      一个对象应该对其他对象保持最少的了解
 * （6）里氏替换原则
 *      所有引用基类的地方必须能透明地使用其子类的对象
 * （7）单一职责原则
 *      不要存在多于一个导致类变更的原因，即一个类只负责一项职责
 *
 *
 */

public class Test_6 {
    public static void main(String[] args) {
        // 把基本数据类型转换为包装类，称为自动装箱
        Integer i1 = new Integer(10);
        // 逆过程，自动拆箱
        int i2 = i1.intValue();

        Integer i3 = 10;
        Integer i4 = new Integer("123");

        String num1 = "12";
        int i5 = Integer.parseInt(num1);

    }


}
